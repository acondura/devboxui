<?php

/**
 * @file
 * Contains \Drupal\devboxui\DevboxUiModule.
 */

use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\Core\Field\FieldDefinitionInterface;

/**
 * Implements hook_form_alter().
 */
function devboxui_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'user_form') {
    foreach ($form as $field_name => $field) {
      if (preg_match('/^field_vps_/', $field_name)) {
        // Remove the "VPS" prefix from the field title.
        $field_title = $field['widget'][0]['value']['#title'];
        $field_title = explode(' ', $field_title);
        array_shift($field_title);
        $form[$field_name]['widget'][0]['value']['#title'] = implode(' ', $field_title);
        // Add a description to the field.
        $form[$field_name]['widget'][0]['value']['#description'] = devboxuiGetUserFieldDescription($field_name);
      }
    }
  }
}

/**
 * Get the description for a user field.
 */
function devboxuiGetUserFieldDescription($field_name) {
  return '';
}

/**
 * Set dynamic allowed values for the alignment field.
 *
 * @param \Drupal\field\Entity\FieldStorageConfig $definition
 *   The field definition.
 * @param \Drupal\Core\Entity\ContentEntityInterface|null $entity
 *   The entity being created if applicable.
 * @param bool $cacheable
 *   Boolean indicating if the results are cacheable.
 *
 * @return array
 *   An array of possible key and value options.
 *
 * @see options_allowed_values()
 */
function devboxui_server_type(FieldStorageConfig $definition, ContentEntityInterface $entity = NULL, $cacheable) {
  $options = [];
  $entity_type = $entity->getEntityTypeId();
  if ($entity_type == 'paragraph') {
    $bundle = $entity->bundle();
    $allowed_bundles = devboxui_get_providers_list();

    if (in_array($bundle, $allowed_bundles)) {
      $options[] = 'Center';
    }
  }

  return $options;
}

function devboxui_get_providers_list() {
  // Get all field definitions for the user entity.
  $field_definitions = \Drupal::service('entity_field.manager')->getFieldDefinitions('user', 'user');
  $vps_fields = [];

  foreach ($field_definitions as $field_name => $definition) {
    if (str_starts_with($field_name, 'field_vps')) {
      $vps_fields[] = str_replace('field_vps_', '', $field_name);
    }
  }

  return $vps_fields;
}

/**
 * Sets the default value for the alignment field.
 *
 * @param \Drupal\Core\Entity\ContentEntityInterface $entity
 *   The entity being created.
 * @param \Drupal\Core\Field\FieldDefinitionInterface $definition
 *   The field definition.
 *
 * @return array
 *   An array of default value keys with each entry keyed with the “value” key.
 *
 * @see \Drupal\Core\Field\FieldConfigBase::getDefaultValue()
 */
function devboxui_server_type_default(ContentEntityInterface $entity, FieldDefinitionInterface $definition) {
  $default = 'right';
  // Article nodes should default to center alignment.
  if ($entity->bundle() == 'devbox') {
    $default = 'center';
  }

  return [
    ['value' => $default],
  ];
}
